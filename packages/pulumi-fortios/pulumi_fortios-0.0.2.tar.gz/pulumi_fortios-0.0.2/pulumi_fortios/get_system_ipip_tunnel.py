# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetSystemIpipTunnelResult',
    'AwaitableGetSystemIpipTunnelResult',
    'get_system_ipip_tunnel',
]

@pulumi.output_type
class GetSystemIpipTunnelResult:
    """
    A collection of values returned by GetSystemIpipTunnel.
    """
    def __init__(__self__, id=None, interface=None, local_gw=None, name=None, remote_gw=None, vdomparam=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if interface and not isinstance(interface, str):
            raise TypeError("Expected argument 'interface' to be a str")
        pulumi.set(__self__, "interface", interface)
        if local_gw and not isinstance(local_gw, str):
            raise TypeError("Expected argument 'local_gw' to be a str")
        pulumi.set(__self__, "local_gw", local_gw)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if remote_gw and not isinstance(remote_gw, str):
            raise TypeError("Expected argument 'remote_gw' to be a str")
        pulumi.set(__self__, "remote_gw", remote_gw)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def interface(self) -> str:
        """
        Interface name that is associated with the incoming traffic from available options.
        """
        return pulumi.get(self, "interface")

    @property
    @pulumi.getter(name="localGw")
    def local_gw(self) -> str:
        """
        IPv4 address for the local gateway.
        """
        return pulumi.get(self, "local_gw")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        IPIP Tunnel name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="remoteGw")
    def remote_gw(self) -> str:
        """
        IPv4 address for the remote gateway.
        """
        return pulumi.get(self, "remote_gw")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")


class AwaitableGetSystemIpipTunnelResult(GetSystemIpipTunnelResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSystemIpipTunnelResult(
            id=self.id,
            interface=self.interface,
            local_gw=self.local_gw,
            name=self.name,
            remote_gw=self.remote_gw,
            vdomparam=self.vdomparam)


def get_system_ipip_tunnel(name: Optional[str] = None,
                           vdomparam: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSystemIpipTunnelResult:
    """
    Use this data source to get information on an fortios system ipiptunnel


    :param str name: Specify the name of the desired system ipiptunnel.
    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['vdomparam'] = vdomparam
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('fortios:index/getSystemIpipTunnel:GetSystemIpipTunnel', __args__, opts=opts, typ=GetSystemIpipTunnelResult).value

    return AwaitableGetSystemIpipTunnelResult(
        id=__ret__.id,
        interface=__ret__.interface,
        local_gw=__ret__.local_gw,
        name=__ret__.name,
        remote_gw=__ret__.remote_gw,
        vdomparam=__ret__.vdomparam)
