# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetFirewallScheduleGroupResult',
    'AwaitableGetFirewallScheduleGroupResult',
    'get_firewall_schedule_group',
]

@pulumi.output_type
class GetFirewallScheduleGroupResult:
    """
    A collection of values returned by GetFirewallScheduleGroup.
    """
    def __init__(__self__, color=None, id=None, members=None, name=None, vdomparam=None):
        if color and not isinstance(color, int):
            raise TypeError("Expected argument 'color' to be a int")
        pulumi.set(__self__, "color", color)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if members and not isinstance(members, list):
            raise TypeError("Expected argument 'members' to be a list")
        pulumi.set(__self__, "members", members)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter
    def color(self) -> int:
        """
        Color of icon on the GUI.
        """
        return pulumi.get(self, "color")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def members(self) -> Sequence['outputs.GetFirewallScheduleGroupMemberResult']:
        """
        Schedules added to the schedule group. The structure of `member` block is documented below.
        """
        return pulumi.get(self, "members")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Schedule name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")


class AwaitableGetFirewallScheduleGroupResult(GetFirewallScheduleGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFirewallScheduleGroupResult(
            color=self.color,
            id=self.id,
            members=self.members,
            name=self.name,
            vdomparam=self.vdomparam)


def get_firewall_schedule_group(name: Optional[str] = None,
                                vdomparam: Optional[str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFirewallScheduleGroupResult:
    """
    Use this data source to get information on an fortios firewallschedule group


    :param str name: Specify the name of the desired firewallschedule group.
    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['vdomparam'] = vdomparam
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('fortios:index/getFirewallScheduleGroup:GetFirewallScheduleGroup', __args__, opts=opts, typ=GetFirewallScheduleGroupResult).value

    return AwaitableGetFirewallScheduleGroupResult(
        color=__ret__.color,
        id=__ret__.id,
        members=__ret__.members,
        name=__ret__.name,
        vdomparam=__ret__.vdomparam)
