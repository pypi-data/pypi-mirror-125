# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetSystemVdomNetflowResult',
    'AwaitableGetSystemVdomNetflowResult',
    'get_system_vdom_netflow',
]

@pulumi.output_type
class GetSystemVdomNetflowResult:
    """
    A collection of values returned by GetSystemVdomNetflow.
    """
    def __init__(__self__, collector_ip=None, collector_port=None, id=None, source_ip=None, vdom_netflow=None, vdomparam=None):
        if collector_ip and not isinstance(collector_ip, str):
            raise TypeError("Expected argument 'collector_ip' to be a str")
        pulumi.set(__self__, "collector_ip", collector_ip)
        if collector_port and not isinstance(collector_port, int):
            raise TypeError("Expected argument 'collector_port' to be a int")
        pulumi.set(__self__, "collector_port", collector_port)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if source_ip and not isinstance(source_ip, str):
            raise TypeError("Expected argument 'source_ip' to be a str")
        pulumi.set(__self__, "source_ip", source_ip)
        if vdom_netflow and not isinstance(vdom_netflow, str):
            raise TypeError("Expected argument 'vdom_netflow' to be a str")
        pulumi.set(__self__, "vdom_netflow", vdom_netflow)
        if vdomparam and not isinstance(vdomparam, str):
            raise TypeError("Expected argument 'vdomparam' to be a str")
        pulumi.set(__self__, "vdomparam", vdomparam)

    @property
    @pulumi.getter(name="collectorIp")
    def collector_ip(self) -> str:
        """
        NetFlow collector IP address.
        """
        return pulumi.get(self, "collector_ip")

    @property
    @pulumi.getter(name="collectorPort")
    def collector_port(self) -> int:
        """
        NetFlow collector port number.
        """
        return pulumi.get(self, "collector_port")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="sourceIp")
    def source_ip(self) -> str:
        """
        Source IP address for communication with the NetFlow agent.
        """
        return pulumi.get(self, "source_ip")

    @property
    @pulumi.getter(name="vdomNetflow")
    def vdom_netflow(self) -> str:
        """
        Enable/disable NetFlow per VDOM.
        """
        return pulumi.get(self, "vdom_netflow")

    @property
    @pulumi.getter
    def vdomparam(self) -> Optional[str]:
        return pulumi.get(self, "vdomparam")


class AwaitableGetSystemVdomNetflowResult(GetSystemVdomNetflowResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSystemVdomNetflowResult(
            collector_ip=self.collector_ip,
            collector_port=self.collector_port,
            id=self.id,
            source_ip=self.source_ip,
            vdom_netflow=self.vdom_netflow,
            vdomparam=self.vdomparam)


def get_system_vdom_netflow(vdomparam: Optional[str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSystemVdomNetflowResult:
    """
    Use this data source to get information on fortios system vdomnetflow


    :param str vdomparam: Specifies the vdom to which the data source will be applied when the FortiGate unit is running in VDOM mode. Only one vdom can be specified. If you want to inherit the vdom configuration of the provider, please do not set this parameter.
    """
    __args__ = dict()
    __args__['vdomparam'] = vdomparam
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('fortios:index/getSystemVdomNetflow:GetSystemVdomNetflow', __args__, opts=opts, typ=GetSystemVdomNetflowResult).value

    return AwaitableGetSystemVdomNetflowResult(
        collector_ip=__ret__.collector_ip,
        collector_port=__ret__.collector_port,
        id=__ret__.id,
        source_ip=__ret__.source_ip,
        vdom_netflow=__ret__.vdom_netflow,
        vdomparam=__ret__.vdomparam)
