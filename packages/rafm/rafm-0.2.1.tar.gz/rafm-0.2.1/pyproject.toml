[tool.poetry]
name = "rafm"
version = "0.2.1"
description = "rafm"
authors = ["UNM Translational Informatics Team <datascience.software@salud.unm.edu>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/unmtransinfo/rafm"
repository = "https://github.com/unmtransinfo/rafm"
documentation = "https://rafm.readthedocs.io"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]
keywords = [
    "science",
    "biology",
    "bioinformatics",
    "pharmacology",
    "data science",
    "protein",
    "sequences",
    "structural biology",
    "AlphaFold"
]

[tool.poetry.urls]
Changelog = "https://github.com/unmtransinfo/rafm/releases"

[tool.poetry.dependencies]
python = "^3.8.1, <3.10"
typer = "*"
numpy = "*"
loguru = "^0.5.3"
statsdict = "^0.1.3"
pandas = "^1.3.4"

[tool.poetry.dev-dependencies]
pytest = "*"
coverage = {extras = ["toml"], version = "*"}
safety = "*"
mypy = "*"
typeguard = "*"
xdoctest = {extras = ["colors"], version = "*"}
sphinx = "*"
sphinx-autobuild = "*"
pre-commit = "*"
flake8 = "*"
black = "*"
flake8-bandit = "*"
flake8-bugbear = "*"
flake8-docstrings = "*"
flake8-rst-docstrings = "*"
pep8-naming = "*"
darglint = "*"
reorder-python-imports = "*"
pre-commit-hooks = "*"
sphinx-rtd-theme = "*"
sphinx-click = "*"
Pygments = "*"

[tool.poetry.scripts]
rafm = "rafm.__main__:main"

[tool.black]
line-length = 79
target-version = ['py38', 'py39']
include = '\.pyi?$'
exclude = '''
/(
  \.git
  | \.mypy
  _cache
  | \.nox
  | \.idea
  | \.pytest-cache
  | _build
  | build
  | dist
  | tests/
)/
'''

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["rafm"]

[tool.coverage.report]
show_missing = true
ignore_errors = true
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[tool.mypy]
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
plugins = "numpy.typing.mypy_plugin"

[tool.pytest.ini_options]
addopts = "-x"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
