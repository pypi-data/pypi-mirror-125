{"version":3,"sources":["webpack:///indico/web/modules/events/client/js/creation.js"],"names":["window","setupEventCreationDialog","options","$","extend","categoryField","protectionModeFields","initialCategory","checkAvailability","rbExcludedCategories","serverDefaultTimezone","messages","parseHTML","html","protectionMessage","class","css","marginTop","$createBooking","$availableMessage","$availablePrebookMessage","$conflictBookingMessage","$conflictPrebookingMessage","$conflictPrebookingPrebookMessage","$userBookingMessage","$userPrebookingMessage","$unbookableMessage","$cannotBookMessage","$bookingSwitch","$prebookingSwitch","$bookingSwitchPrebooking","$prebookingSwitchPrebooking","previousRoomId","$currentMessage","startDt","endDt","category","roomData","timezone","currentCategory","multipleOccurrences","updateProtectionMessage","mode","filter","val","is_protected","elem","format","find","text","title","setLectureTimes","occurrence","moment","add","isCategoryExcluded","categoryId","some","excludedCategory","parseInt","id","addCalendarLink","$message","params","path","date","url","rbURL","prop","hideAvailability","resetCheckbox","hide","updateAvailability","isValid","isSame","isSameOrAfter","requestParams","room_id","start_dt","end_dt","ajax","checkRoomAvailabilityURL","method","dataType","contentType","error","handleAjaxError","success","data","camelizeKeys","userBooking","userPrebooking","conflictBooking","unbookable","conflictPrebooking","canBook","String","checked","canPrebook","show","appendTo","closest","on","evt","cat","trigger","startDate","startTime","endDate","endTime","occurrencesVal","occurrences","JSON","parse","length","initAvailabilityValues","this","isBefore"],"mappings":"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","file":"js/module_events.creation.5fa2ba61.bundle.js","sourcesContent":["// This file is part of Indico.\n// Copyright (C) 2002 - 2021 CERN\n//\n// Indico is free software; you can redistribute it and/or\n// modify it under the terms of the MIT License; see the\n// LICENSE file for more details.\n\n/* global handleAjaxError:false */\n\nimport checkRoomAvailabilityURL from 'indico-url:rb.check_room_available';\nimport rbURL from 'indico-url:rb.roombooking';\n\nimport moment from 'moment';\n\nimport {camelizeKeys} from 'indico/utils/case';\n\n/* eslint-disable import/unambiguous */\n(function(global) {\n  global.setupEventCreationDialog = function setupEventCreationDialog(options) {\n    options = $.extend(\n      {\n        categoryField: null,\n        protectionModeFields: null,\n        initialCategory: null,\n        checkAvailability: false,\n        rbExcludedCategories: null,\n        serverDefaultTimezone: null,\n      },\n      options\n    );\n\n    const messages = $($.parseHTML($('#event-creation-protection-messages').html()));\n    const protectionMessage = $('<div>', {class: 'form-group', css: {marginTop: '5px'}});\n\n    const $createBooking = $('#event-creation-create_booking');\n    const $availableMessage = $('#room-available');\n    const $availablePrebookMessage = $('#room-available-prebook');\n    const $conflictBookingMessage = $('#room-conflict-booking');\n    const $conflictPrebookingMessage = $('#room-conflict-prebooking');\n    const $conflictPrebookingPrebookMessage = $('#room-conflict-prebooking-prebook');\n    const $userBookingMessage = $('#room-user-booking');\n    const $userPrebookingMessage = $('#room-user-prebooking');\n    const $unbookableMessage = $('#room-unbookable');\n    const $cannotBookMessage = $('#room-cannot-book');\n    const $bookingSwitch = $('#create-booking');\n    const $prebookingSwitch = $('#create-prebooking');\n    const $bookingSwitchPrebooking = $('#create-booking-over-prebooking');\n    const $prebookingSwitchPrebooking = $('#create-prebooking-over-prebooking');\n\n    let currentCategory = null;\n    let previousRoomId, $currentMessage, startDt, endDt, category, roomData, timezone;\n    let multipleOccurrences = false;\n\n    protectionMessage.appendTo(options.protectionModeFields.closest('.form-field'));\n\n    function updateProtectionMessage() {\n      let mode = options.protectionModeFields.filter(':checked').val();\n      if (mode === 'inheriting') {\n        mode = currentCategory.is_protected ? 'inheriting-protected' : 'inheriting-public';\n      }\n      const elem = messages.filter('.{0}-protection-message'.format(mode));\n      elem.find('.js-category-title').text(currentCategory.title);\n      protectionMessage.html(elem);\n    }\n\n    options.categoryField.on('indico:categorySelected', (evt, cat) => {\n      if (!currentCategory) {\n        options.protectionModeFields.prop('disabled', false);\n        options.protectionModeFields.filter('[value=inheriting]').prop('checked', true);\n      }\n      currentCategory = cat;\n      updateProtectionMessage();\n    });\n\n    options.protectionModeFields.on('change', function() {\n      updateProtectionMessage();\n    });\n\n    if (options.initialCategory) {\n      options.categoryField.trigger('indico:categorySelected', [options.initialCategory]);\n    } else {\n      options.protectionModeFields.prop('disabled', true);\n    }\n\n    function setLectureTimes(occurrence) {\n      startDt = moment(`${occurrence['date']} ${occurrence['time']}`, 'YYYY-MM-DD HH:mm');\n      endDt = moment(startDt).add(occurrence['duration'], 'minutes');\n    }\n\n    function initAvailabilityValues() {\n      const startDate = $('#event-creation-start_dt-datestorage').val();\n      const startTime = $('#event-creation-start_dt-timestorage').val();\n      const endDate = $('#event-creation-end_dt-datestorage').val();\n      const endTime = $('#event-creation-end_dt-timestorage').val();\n      const occurrencesVal = $('#event-creation-occurrences').val();\n      const occurrences = occurrencesVal ? JSON.parse(occurrencesVal) : null;\n\n      roomData = JSON.parse($('#event-creation-location_data').val());\n      timezone = $('#event-creation-timezone').val();\n      category = JSON.parse($('#event-creation-category').val());\n\n      if (occurrences && occurrences.length === 1) {\n        setLectureTimes(occurrences[0]);\n      } else {\n        startDt = moment(`${startDate} ${startTime}`, 'DD/MM/YYYY HH:mm');\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n      }\n    }\n\n    function isCategoryExcluded(categoryId) {\n      return options.rbExcludedCategories.some(excludedCategory => {\n        return parseInt(excludedCategory.id, 10) === categoryId;\n      });\n    }\n\n    function addCalendarLink($message) {\n      const params = {\n        path: 'calendar',\n        date: startDt.format('YYYY-MM-DD'),\n        text: roomData['room_name'],\n      };\n      const url = rbURL(params);\n      $message.find('a').prop('href', url);\n    }\n\n    function hideAvailability(resetCheckbox) {\n      if ($currentMessage) {\n        if (resetCheckbox) {\n          $('#availability-messages')\n            .find(\"input[id^='create']\")\n            .prop('checked', false);\n          $createBooking.val('false');\n        }\n        $currentMessage.hide();\n      }\n    }\n\n    function updateAvailability(resetCheckbox = false) {\n      hideAvailability(resetCheckbox);\n\n      if (\n        !('room_id' in roomData) ||\n        !startDt.isValid() ||\n        !endDt.isValid() ||\n        !startDt.isSame(endDt, 'day') ||\n        startDt.isSameOrAfter(endDt) ||\n        isCategoryExcluded(category['id']) ||\n        timezone !== options.serverDefaultTimezone ||\n        multipleOccurrences\n      ) {\n        $createBooking.val('false');\n        return;\n      }\n\n      const requestParams = {\n        room_id: roomData['room_id'],\n        start_dt: startDt.format(moment.HTML5_FMT.DATETIME_LOCAL),\n        end_dt: endDt.format(moment.HTML5_FMT.DATETIME_LOCAL),\n      };\n\n      $.ajax({\n        url: checkRoomAvailabilityURL(requestParams),\n        method: 'GET',\n        dataType: 'json',\n        contentType: 'application/json',\n        error: handleAjaxError,\n        success(data) {\n          data = camelizeKeys(data);\n          if (data.userBooking) {\n            $createBooking.val('false');\n            $currentMessage = $userBookingMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.userPrebooking) {\n            $createBooking.val('false');\n            $currentMessage = $userPrebookingMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.conflictBooking) {\n            $createBooking.val('false');\n            $currentMessage = $conflictBookingMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.unbookable) {\n            $createBooking.val('false');\n            $currentMessage = $unbookableMessage;\n            addCalendarLink($currentMessage);\n          } else if (data.conflictPrebooking) {\n            if (data.canBook) {\n              $createBooking.val(String($bookingSwitchPrebooking[0].checked));\n              $currentMessage = $conflictPrebookingMessage;\n              addCalendarLink($currentMessage);\n            } else if (data.canPrebook) {\n              $createBooking.val(String($prebookingSwitchPrebooking[0].checked));\n              $currentMessage = $conflictPrebookingPrebookMessage;\n              addCalendarLink($currentMessage);\n            } else {\n              $createBooking.val('false');\n              $currentMessage = $cannotBookMessage;\n            }\n          } else if (data.canBook) {\n            $createBooking.val(String($bookingSwitch[0].checked));\n            $currentMessage = $availableMessage;\n          } else if (data.canPrebook) {\n            $createBooking.val(String($prebookingSwitch[0].checked));\n            $currentMessage = $availablePrebookMessage;\n          } else {\n            $createBooking.val('false');\n            $currentMessage = $cannotBookMessage;\n          }\n          $currentMessage.show();\n        },\n      });\n    }\n\n    if (options.checkAvailability) {\n      initAvailabilityValues();\n\n      $('#event-creation-location_data').on('change', function() {\n        roomData = JSON.parse($(this).val());\n        if (previousRoomId !== roomData['room_id']) {\n          previousRoomId = roomData['room_id'];\n          updateAvailability(true);\n        }\n      });\n\n      $('#event-creation-start_dt-datestorage').on('change', function() {\n        const startDate = $(this).val();\n        const startTime = $('#event-creation-start_dt-timestorage').val();\n        const endDate = $('#event-creation-end_dt-datestorage').val();\n        const endTime = $('#event-creation-end_dt-timestorage').val();\n        startDt = moment(`${startDate} ${startTime}`, 'DD/MM/YYYY HH:mm');\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        // workaround for automatic end date update if start date is after end date\n        if (endDt.isBefore(startDt)) {\n          endDt = moment(`${startDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        }\n        updateAvailability();\n      });\n\n      $('#event-creation-start_dt-timestorage').on('change', function() {\n        const startDate = $('#event-creation-start_dt-datestorage').val();\n        const startTime = $('#event-creation-start_dt-timestorage').val();\n        startDt = moment(`${startDate} ${startTime}`, 'DD/MM/YYYY HH:mm');\n        updateAvailability();\n      });\n\n      $('#event-creation-end_dt-datestorage').on('change', function() {\n        const endDate = $(this).val();\n        const endTime = $('#event-creation-end_dt-timestorage').val();\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        updateAvailability();\n      });\n\n      $('#event-creation-end_dt-timestorage').on('change', function() {\n        const endDate = $('#event-creation-end_dt-datestorage').val();\n        const endTime = $(this).val();\n        endDt = moment(`${endDate} ${endTime}`, 'DD/MM/YYYY HH:mm');\n        updateAvailability();\n      });\n\n      $('#event-creation-occurrences').on('change', function() {\n        const occurrences = JSON.parse($(this).val());\n        if (occurrences.length === 1) {\n          setLectureTimes(occurrences[0]);\n          multipleOccurrences = false;\n        } else {\n          multipleOccurrences = true;\n        }\n        updateAvailability();\n      });\n\n      $('#event-creation-timezone').on('change', function() {\n        timezone = $(this).val();\n        updateAvailability();\n      });\n\n      $('#event-creation-category').on('change', function() {\n        category = JSON.parse($(this).val());\n        updateAvailability();\n      });\n\n      $bookingSwitch\n        .add($prebookingSwitch)\n        .add($bookingSwitchPrebooking)\n        .add($prebookingSwitchPrebooking)\n        .on('change', function() {\n          $createBooking.val(String(this.checked));\n        });\n    }\n  };\n})(window);\n"],"sourceRoot":""}