Metadata-Version: 2.1
Name: scalabis
Version: 1.0
Summary: A Python3 module for fast & easy sequence comparison.
Home-page: https://github.com/afombravo/scalabis
Author: Afonso M Bravo
Author-email: <afonsombravo@hotmail.com>
License: UNKNOWN
Keywords: sequence,mismatch,comparison
Platform: UNKNOWN
Classifier: Development Status :: 6 - Mature
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown

# Welcome to scalabis
A Python3 module for fast & easy sequence comparison

scalabis is built on numba and numpy, taking advantage of JIT compiled functions for speedy mismatched sequence comparisons.

# Instructions

Install scalabis using pip:

`pip install scalabis`

Import it as any other python module:

`import scalabis as sc`


Usage examples. See help(function) after import for more use details:

`sequence1 = "pihton"
sequence2 = "Hello there, this is a test for a fast & easy mismatch matching python module. Allegedly, it is efficient"`

count by how many mismatches 2 same lenght sequences diverge:

`mismatch_counter(sequence1,sequence2)`

find one sequence in another, with mismatches. return_template=True returns 

`found = find(sequence1,sequence2,mismatch=1)`

without return in a class

`found = find(sequence1,sequence2,mismatch=2,dict_return=False)`

compare two sequences, searching from the search sequence from a specified starting point (default=0), 
returning the full aligned matrix whrere mismatches are 1, and matches are 0. 
Mismatches are the total mismatches in the compared matrix

`found = comparefromfound(sequence1,sequence2,mismatch=0,start=0,dict_return=True)`

compare two sequences, returning all the locations in which they differ

`found = compareandlocate(start=0,search=sequence1,template=sequence2)`

compare two sequences, returning the full aligned matrix. starting point can be specified

`found = compare(search=sequence1,template=sequence2,start=0,dict_return=False)`


