from datetime import (
    datetime,
    timezone,
)
from time import time
from typing import Union

from .token import Token


def _digit_sequence(length: int):
    digit = Token(Token.core.random_digit, anonymous=True)
    return lambda: sum(digit.value * 10 ** i for i in range(length))


# Can be used in the Field example argument instead of 'None' because pydantic
# ignores 'example=None' when converting it to openapi.json.
# >>> ... address: str = Field(None, example=NONE)
# // will show in openapi.json as such:
# ..."address":{..."type":"string","example":null}
NONE = Token(None, full_match=True)

# Placeholders for dynamically generated values for use as examples in the
# openapi.json generated by FastAPI or any other use case you can think of.

# Common
GUID = Token[str](Token.core.uuid4)
TIMESTAMP = Token[float](time)
ISO_TIMESTAMP = Token[str](
    lambda: (
        datetime
        .utcnow()
        .replace(tzinfo=timezone.utc)
        .isoformat()
    )
)
UUID = Token[str](Token.core.uuid4)

# Text, Numbers and Colors
ALPHA_NUMERIC = Token[Union[int, str]](
    Token.core.random_element(
        elements=(
            Token.core.random_digit(),
            Token.core.random_lowercase_letter(),
        )
    )
)
BOOLEAN = Token[bool](Token.core.pybool)
INT = Token[int](Token.core.pyint)
COLOR = Token[str](Token.core.safe_color_name)
HEX_COLOR = Token[str](Token.core.hex_color)
ABBREVIATION = Token[str](Token.core.abbreviation)

# Internet and IP Addresses
IP = Token[str](Token.core.ipv4)
IPV6 = Token[str](Token.core.ipv6)
MAC_ADDRESS = Token[str](Token.core.mac_address)
PASSWORD = Token[str](Token.core.password(length=15, special_chars=False))
LOCALE = Token[str](Token.core.language_code)
USER_AGENT = Token[str](Token.core.user_agent)
PROTOCOL = Token[str](Token.core.protocol)
SEMVER = Token[str](  # noqa
    lambda: (lambda digit: ".".join(str(digit.value) for _ in range(3)))(
        Token(Token.core.random_digit, anonymous=True)
    )
)

# Names
FIRST_NAME = Token[str](Token.core.first_name)
LAST_NAME = Token[str](Token.core.last_name)
FULL_NAME = Token[str](Token.core.name)
NAME_PREFIX = Token[str](Token.core.prefix)
NAME_SUFFIX = Token[str](Token.core.suffix)

# Profession
JOB_AREA = Token[str](Token.core.job_area)
# TODO
#  JOB_DESCRIPTOR
#  JOB_TITLE
#  JOB_TYPE

# Phone, Address and Location
PHONE_NUMBER = Token[str](Token.core.phone_number)
CITY = Token[str](Token.core.city)
STREET_NAME = Token[str](Token.core.street_name)
STREET_ADDRESS = Token[str](Token.core.street_address)
COUNTRY = Token[str](Token.core.country)
COUNTRY_CODE = Token[str](Token.core.country_code)
LATITUDE = Token[float](Token.core.latitude)
LONGITUDE = Token[float](Token.core.longitude)
ADDRESS = Token[str](Token.core.address)
# TODO
#  PHONE_NUMBER_EXT

# Images
IMAGE_URL = Token[str](Token.core.image_url)
ABSTRACT_IMAGE = Token[str]("http://lorempixel.com/640/480/abstract")
ANIMALS_IMAGE = Token[str]("http://lorempixel.com/640/480/animals")
BUSINESS_IMAGE = Token[str]("http://lorempixel.com/640/480/business")
CATS_IMAGE = Token[str]("http://lorempixel.com/640/480/cats")
CITY_IMAGE = Token[str]("http://lorempixel.com/640/480/city")
FOOD_IMAGE = Token[str]("http://lorempixel.com/640/480/food")
NIGHTLIGHT_IMAGE = Token[str]("http://lorempixel.com/640/480/nightlife")
FASHION_IMAGE = Token[str]("http://lorempixel.com/640/480/fashion")
PEOPLE_IMAGE = Token[str]("http://lorempixel.com/640/480/people")
NATURE_IMAGE = Token[str]("http://lorempixel.com/640/480/nature")
SPORTS_IMAGE = Token[str]("http://lorempixel.com/640/480/sports")
TRANSPORT_IMAGE = Token[str]("http://lorempixel.com/640/480/transport")
# TODO
#  AVATAR_IMAGE
#  IMAGE_DATA_URI

# Finance
BANK_ACCOUNT = Token[int](_digit_sequence(8))
CREDIT_CARD_MASK = Token[int](_digit_sequence(4))
BANK_ACCOUNT_IBAN = Token[str](Token.core.iban)
CURRENCY_CODE = Token[str](Token.core.currency_code)
CURRENCY_NAME = Token[str](Token.core.currency_name)
CURRENCY_SYMBOL = Token[str](Token.core.currency_symbol)
# TODO
#  BANK_ACCOUNT_NAME
#  BANK_ACCOUNT_BIC
#  TRANSACTION_TYPE
#  BITCOIN

# Business


# Catchphrases


# Databases


# Dates


# Domains, Emails and Usernames


# Files and Directories


# Stores


# Grammar


# Lorem Ipsum
TEXT = Token[str](Token.core.text)
